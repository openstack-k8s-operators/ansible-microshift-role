---
- name: Install CentOS NFV repository to enable Open vSwitch
  become: true
  when: ansible_os_family != 'RedHat'
  ansible.builtin.yum:
    name: centos-release-nfv-openvswitch
    state: present

- name: Install microshift package
  become: true
  ansible.builtin.yum:
    name: microshift
    state: present
    enablerepo: microshift-rpms,microshift-deps-rpms
  notify: Restart Microshift

- name: Ensure microshift lib dir exists
  become: true
  ansible.builtin.file:
    path: /var/lib/microshift
    state: directory

- name: Check if version file exists
  become: true
  ansible.builtin.stat:
    path: /var/lib/microshift/version
  register: _microshift_version_file

- name: "Create a version file if does not exists with version {{ microshift_version }}.0"
  become: true
  when: not _microshift_version_file.stat.exists
  ansible.builtin.copy:
    content: |
      {{ microshift_version }}.0
    dest: /var/lib/microshift/version

- name: Change Microshift configuration files
  become: true
  ansible.builtin.copy:
    content: |
      {{ lookup('vars', item.var_name) | to_nice_yaml(indent=2) }}
    dest: "/etc/microshift/{{ item.dest }}"
    mode: "0644"
    owner: root
    group: root
  loop:
    - var_name: microshift_config
      dest: config.yaml
    - var_name: microshift_lmvd
      dest: lvmd.yaml
    - var_name: microshift_ovn
      dest: ovn.yaml
  when: vars[item.var_name]

- name: Flush handlers
  ansible.builtin.meta: flush_handlers

- name: Wait for kubeconfig file after deploying Microshift
  become: true
  ansible.builtin.wait_for:
    path: /var/lib/microshift/resources/kubeadmin/{{ fqdn }}/kubeconfig
    search_regex: microshift
    delay: 5
    timeout: 300

- name: Create kube config directory
  ansible.builtin.file:
    path: ~/.kube
    state: directory
    mode: "0755"

- name: Copy kubeconfig for localhost
  become: true
  ansible.builtin.copy:
    src: /var/lib/microshift/resources/kubeadmin/kubeconfig
    dest: "{{ ansible_user_dir }}/.kube/config-localhost"
    remote_src: true
    owner: "{{ ansible_user_id }}"
    group: "{{ ansible_user_id }}"
    mode: "0644"

- name: "Copy kubeconfig for {{ fqdn }}"
  become: true
  ansible.builtin.copy:
    src: /var/lib/microshift/resources/kubeadmin/{{ fqdn }}/kubeconfig
    dest: "{{ ansible_user_dir }}/.kube/config"
    remote_src: true
    owner: "{{ ansible_user_id }}"
    group: "{{ ansible_user_id }}"
    mode: "0644"
